3. Script modification


The algorithm is semi-adaptive Huffman, which utilises different probability
distributions on a per-character basis.

; Init decoder
;
; HL = page address
; $A0AA = page #

[0200D4] 40d4 CD C2 43    CALL 43C2h       AF=0000 BC=0000 DE=0005 HL=4F14 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]

; Start decoder

[0200DB] 40db CD 11 34    CALL 3411h       AF=0044 BC=0000 DE=0005 HL=4F14 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]

Tech1a.asm uses the core code residing at $3411. The only unusual parts are
how the tree data is stored and the consistent switching of registers. Otherwise,
it's actually quite simple when taken apart but really hand-optimised.


We backup and find where the script table pointers reside.

__________________________________________________________


[0200D1] 40d1 CD 14 40    CALL 4014h       AF=0000 BC=0000 DE=0005 HL=00D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]

[020014] 4014 F5          PUSH AF          AF=0000 BC=0000 DE=0005 HL=00D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[020015] 4015 C5          PUSH BC          AF=0000 BC=0000 DE=0005 HL=00D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[020016] 4016 D5          PUSH DE          AF=0000 BC=0000 DE=0005 HL=00D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[020017] 4017 45          LD B,L           AF=0000 BC=0000 DE=0005 HL=00D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[020018] 4018 5C          LD E,H           AF=0000 BC=D200 DE=0005 HL=00D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[020019] 4019 CB 23       SLA E            AF=0000 BC=D200 DE=0000 HL=00D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[02001B] 401b 16 00       LD D,00h         AF=0044 BC=D200 DE=0000 HL=00D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]

; Load (page offset vector, table page)

[02001D] 401d 21 D2 43    LD HL,43D2h      AF=0044 BC=D200 DE=0000 HL=00D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[020020] 4020 19          ADD HL,DE        AF=0044 BC=D200 DE=0000 HL=43D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]

; $203D2 = 00 09 | 07 08 | 01 09 | 08 08 | 09 08 | 02 09
;
; page $20000: $43DE, $53D7, $6830
; page $24000: $401E, $5161, $64EB

[020021] 4021 4E          LD C,(HL)        AF=0044 BC=D200 DE=0000 HL=43D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[020022] 4022 23          INC HL           AF=0044 BC=D200 DE=0000 HL=43D2 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[020023] 4023 7E          LD A,(HL)        AF=0044 BC=D200 DE=0000 HL=43D3 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[020024] 4024 32 AA A0    LD (A0AAh),A     AF=0944 BC=D200 DE=0000 HL=43D3 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[020027] 4027 67          LD H,A           AF=0944 BC=D200 DE=0000 HL=43D3 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[020028] 4028 69          LD L,C           AF=0944 BC=D200 DE=0000 HL=09D3 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]

; Finds the sub-table within page H, [offset L * 2] + sequential string B

[020029] 4029 CD F2 33    CALL 33F2h       AF=0944 BC=D200 DE=0000 HL=0900 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]

ex. $24000 + $00 * 2 = $24000 --> $2401E + $D2 strings = $24F14

; HL has final page offset

[02002C] 402c D1          POP DE           AF=0844 BC=0000 DE=0009 HL=4F14 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[02002D] 402d C1          POP BC           AF=0844 BC=0000 DE=0005 HL=4F14 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[02002E] 402e F1          POP AF           AF=0844 BC=0000 DE=0005 HL=4F14 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]
[02002F] 402f C9          RET              AF=0000 BC=0000 DE=0005 HL=4F14 IX=A0A2 IY=DECF AF'=0044   P0=00000 P1=20000 P2=00000 [SRAM]

__________________________________________________________


The space taken up by the Huffman data itself is:

[003434] 3434 6F          LD L,A           AF=DB44 BC=0000 DE=FF00 HL=C480 IX=A0A2 IY=DECF AF'=8044   P0=00000 P1=24000 P2=28000 [ROM]
[003435] 3435 26 20       LD H,20h         AF=DB44 BC=0000 DE=FF00 HL=C4DB IX=A0A2 IY=DECF AF'=8044   P0=00000 P1=24000 P2=28000 [ROM]
[003437] 3437 29          ADD HL,HL        AF=DB44 BC=0000 DE=FF00 HL=20DB IX=A0A2 IY=DECF AF'=8044   P0=00000 P1=24000 P2=28000 [ROM]
[003438] 3438 ED 4B 0A 80 LD BC,(800Ah)    AF=DB44 BC=0000 DE=FF00 HL=41B6 IX=A0A2 IY=DECF AF'=8044   P0=00000 P1=24000 P2=28000 [ROM]
[00343C] 343c 09          ADD HL,BC        AF=DB44 BC=5C3F DE=FF00 HL=41B6 IX=A0A2 IY=DECF AF'=8044   P0=00000 P1=24000 P2=28000 [ROM]

; $29C3F-$29DF6 = Huffman tree pointer table ($DC 2-byte entries)
; $29DF7-$2B798 = Huffman tree data
;
; Total of $1B5A bytes

[00343D] 343d 7E          LD A,(HL)        AF=DB44 BC=5C3F DE=FF00 HL=9DF5 IX=A0A2 IY=DECF AF'=8044   P0=00000 P1=24000 P2=28000 [ROM]
[00343E] 343e 23          INC HL           AF=8344 BC=5C3F DE=FF00 HL=9DF5 IX=A0A2 IY=DECF AF'=8044   P0=00000 P1=24000 P2=28000 [ROM]
[00343F] 343f 66          LD H,(HL)        AF=8344 BC=5C3F DE=FF00 HL=9DF6 IX=A0A2 IY=DECF AF'=8044   P0=00000 P1=24000 P2=28000 [ROM]
[003440] 3440 6F          LD L,A           AF=8344 BC=5C3F DE=FF00 HL=77F6 IX=A0A2 IY=DECF AF'=8044   P0=00000 P1=24000 P2=28000 [ROM]